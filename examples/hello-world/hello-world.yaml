tosca_definitions_version: tosca_2_0

metadata:

  template_name: Khutulun Hello World Example
  template_author: Khutulun

imports:

- namespace: kh
  url: khutulun/profile.yaml

topology_template:

  node_templates:

    endpoint:
      type: kh:Endpoint
      requirements:
      - connection: frontend

    frontend:
      type: kh:LoadBalancer
      requirements:
      - connection: web-server

    web-server:
      type: kh:Container
      capabilities:
        activity:
          properties:
            image:
              reference: docker.io/nginx:1.21.6
        connectable:
          attributes:
            ports:
            - internal: 80
              protocol: TCP
      requirements:
      - connection:
          node: database
          relationship:
            type: kh:IPPort
          # event: reconfigure

    database:
      type: kh:Container
      capabilities:
        activity:
          properties:
            image:
              reference: docker.io/postgres:14.2
            create-arguments: [ --env=POSTGRES_PASSWORD=postgres ]
          attributes:
            host: lab1 # TEMP: use policy
      requirements:
      - storage: directory

    directory:
      type: kh:LocalDirectory
      capabilities:
        storage:
          properties:
            temporary: true

  policies:

    - podman:
        type: kh:Delegation
        properties:
          delegate: podman
        targets:
        - frontend
        - web-server
        - database

    - colocate:
        type: kh:Colocation
        targets:
        - endpoint
        - frontend
        - web-server

    - redundancy:
        type: kh:Redundancy
        properties:
          minimum-count: 3
        targets:
        - frontend

    - place:
        type: kh:Distribution
        properties:
          hosts: { name: lab1 }
        targets:
        - database


  outputs:

    port:
      value:
        concat:
        - { get_attribute: [ web-server, connectable, ports, 0, internal ] }
