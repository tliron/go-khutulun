tosca_definitions_version: tosca_2_0

profile: cloud.puccini.khutulun

metadata:

  template_name: Khutulun Profile
  template_author: Khutulun

data_types:

  Command:
    properties:
      name:
        type: string
      arguments:
        type: list
        entry_schema: string
        required: false

  Schedule:
    properties:
      times:
        type: list
        entry_schema: scalar-unit.time

  ContainerImage:
    properties:
      name:
        description: >-
          If not provided will use name.
        type: string
        required: false
      source:
        description: >-
          Image registry pseudo-URI. If not provided a ContainerImage artifact would have to be attached instead.
        type: string
        required: false
      create-arguments:
        type: list
        entry_schema: string
        required: false

capability_types:

  Runnable:
    metadata:
      khutulun.plugin: runnable
    description: >-
      Base type for continuously-running Service and short-running Task.
    properties:
      runner:
        type: string
        required: false
      temporality:
        type: string
        constraints:
        - valid_values: [ Continuous, ASAP, Specific, Delayed, Recurring ]
        default: Continuous
      specific-temporality:
        type: timestamp
        required: false
      delayed-temporality:
        type: scalar-unit.time
        required: false
      recurring-temporality:
        type: Schedule
        required: false
      user:
        description: >-
          Operating system user owning the runnable. If not provided will be the user owning the conductor.
        type: string
        required: false
      systemd:
        type: boolean
        default: false

  Connectible:
    metadata:
      khutulun.plugin: connectible

  Storage:
    metadata:
      khutulun.plugin: storage

  # Runnables

  Process:
    derived_from: Runnable
    properties:
      runner:
        default: shell
      command:
        type: Command

  Container:
    derived_from: Runnable
    properties:
      runner:
        default: podman
      image:
        type: ContainerImage
        required: false

  PristineContainer:
    derived_from: Container
    properties:
      runner:
        default: distrobox

  SystemContainer:
    derived_from: Container
    properties:
      runner:
        default: systemd-nspawn

  Pod:
    derived_from: Runnable
    properties:
      runner:
        default: podman
      images:
        description: >-
          OCI pseudo-URIs. If not provided ContainerImage artifacts would have to be attached instead.
        type: list
        entry_schema: ContainerImage
        required: false

  VirtualMachine:
    derived_from: Runnable

  # Connectible

  Exposable:
    derived_from: Connectible
    properties:
      expose:
        type: boolean
        default: false

  # Storage

  LocalDirectory:
    derived_from: Storage
    properties:
      path:
        type: string
        required: false
      temporary:
        type: boolean
        default: false

node_types:

  Redundant:
    properties:
      count:
        type: integer
        default: 1

  # Runnable

  Process:
    derived_from: Redundant
    capabilities:
      runnable:
        type: Process
      connectible: Exposable
    requirements:
    - connection:
        capability: Connectible
        relationship: Connection
    - storage:
        capability: Storage
        relationship: Storage

  Container:
    derived_from: Redundant
    capabilities:
      runnable: Container
      connectible: Exposable
    requirements:
    - connection:
        capability: Connectible
        relationship: Connection
    - storage:
        capability: Storage
        relationship: Storage

  PristineContainer:
    derived_from: Container
    capabilities:
      runnable: PristineContainer

  SystemContainer:
    derived_from: Container
    capabilities:
      runnable: SystemContainer

  LoadBalancer:
    derived_from: Container
    capabilities:
      runnable:
        type: Container
        properties:
          image:
            default:
              source: docker.io/nginx:1.21.6
    # TODO: attach an artifact that sets up loadbalancing

  VirtualMachine:
    derived_from: Redundant
    capabilities:
      runnable: VirtualMachine
      connectible: Connectible
    requirements:
    - connection:
        capability: Connectible
        relationship: Connection
    - storage:
        capability: Storage
        relationship: Storage

  # Storage

  LocalDirectory:
    capabilities:
      storage: LocalDirectory

relationship_types:

  Connection:
    metadata:
      khutulun.plugin: connection

  Storage:
    metadata:
      khutulun.plugin: storage

  BlockStorage:
    derived_from: Storage

  Filesystem:
    derived_from: Storage

  IPPort:
    derived_from: Connection
    attributes:
      ip:
        type: string
      port:
        type: integer

policy_types:

  Run:
    properties:
      runner: # e.g. "podman"
        type: string
        required: false

  Placement:
    properties:
      member:
        type: string
        required: false
      hints:
        type: list
        entry_schema:
          type: string
          constraints:
          - valid_values: [ Colocate ]
        required: false

artifact_types:

  ContainerImage: {}
